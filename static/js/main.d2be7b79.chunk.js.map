{"version":3,"sources":["components/URLForm.js","components/NavioDiv.js","components/MetaData.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["URLForm","props","onChange","event","setState","target","name","value","submit","preventDefault","onSubmit","state","url","className","style","maxWidth","htmlFor","fontSize","type","id","this","aria-describedby","onClick","Component","Visualizacion","setElem","elem","navioInstance","navio","data","addAllAttribs","show","error","loading","display","ref","MetaData","metadata","category","webUri","description","license","scope","href","loadAllData","recurso","a","allData","i","length","fetch","resp","console","log","json","row","push","Main","errorDeFormato","window","navigator","onLine","toLowerCase","includes","splitPath","split","resource","replace","ok","status","Error","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2be7b79.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class URLForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  submit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.url);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"text-center m-auto py-4\" style={{ maxWidth: 700 }}>\r\n        <label htmlFor=\"url-input\" style={{ fontSize: \"1.2em\" }}>\r\n          Url o Identificador del Recurso\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"url-input\"\r\n          className=\"form-control m-auto\"\r\n          value={this.state.url}\r\n          name=\"url\"\r\n          onChange={this.onChange}\r\n          aria-describedby=\"url-input-help\"\r\n          style={{ maxWidth: 500 }}\r\n        />\r\n        <p className=\"pt-2\">\r\n          La url debe tener el formato datos.gov.co/resource/$id (https://www.datos.gov.co/resource/hp9r-jxuu.json) o puedes pasar\r\n          únicamente el identificador del recurso. Por ejemplo, 'hp9r-jxuu'.\r\n        </p>\r\n        <button className=\"btn btn-primary\" onClick={this.submit}>\r\n          Cargar\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport navio from \"navio\";\r\n\r\nexport default class Visualizacion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navio: null\r\n    };\r\n    this.navioInstance = null;\r\n  }\r\n\r\n  setElem = elem => {\r\n    if (elem) this.navioInstance = navio(elem, 600);\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.data && this.navioInstance) {\r\n      this.navioInstance.data(this.props.data);\r\n      this.navioInstance.addAllAttribs();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const show = !(this.props.error || this.props.loading);\r\n    return (\r\n      <div>\r\n        {this.props.error\r\n          ? this.props.error\r\n          : this.props.loading\r\n          ? \"Cargando...\"\r\n          : \"\"}\r\n        <div id=\"navio\" style={{display: show?\"\":\"none\"}} ref={this.setElem}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MetaData({ loading, error, metadata }) {\r\n  if ( error || !metadata) {\r\n    return false;\r\n  }\r\n//   metadata = {\r\n//     name: \"Catálogo Nacional de Estaciones del IDEAM\",\r\n//     category: \"Ambiente y Desarrollo Sostenible\",\r\n//     webUri: \"https://www.datos.gov.co/d/hp9r-jxuu\",\r\n//     license: \"Creative Commons Attribution | Share Alike 4.0 International\"\r\n//   };\r\n  const { name, category, description, webUri, license } = metadata;\r\n  return (\r\n    <table className=\"table table-striped m-auto pt-3\" style={{maxWidth:700}}>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">Nombre</th>\r\n          <td scope=\"col-auto\">{name}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Categoría</th>\r\n          <td>{category}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Recurso Web</th>\r\n          <td><a href={webUri}>{webUri}</a></td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Licencia</th>\r\n          <td>{license}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport URLForm from \"./URLForm\";\r\nimport NavioDiv from \"./NavioDiv\";\r\nimport MetaData from \"./MetaData\";\r\n\r\nconst loadAllData = async recurso => {\r\n  const allData = [];\r\n  let data = [0];\r\n  let i = 0;\r\n  while (i < 1 && data.length > 0) {\r\n    const resp = await fetch(\r\n      `https://www.datos.gov.co/resource/${recurso}.json?$limit=1000&$offset=${i *\r\n        1000}`\r\n    );\r\n    console.log(resp);\r\n    data = await resp.json();\r\n\r\n    for (let row of data) {\r\n      allData.push(row);\r\n    }\r\n    i += 1;\r\n  }\r\n  return allData;\r\n};\r\n\r\nexport default class Main extends Component {\r\n  state = {\r\n    loading: false,\r\n    data: null,\r\n    error: null\r\n  };\r\n\r\n  errorDeFormato = () => {\r\n    this.setState({\r\n      error:\r\n        \"La url debe tener el formato 'datos.gov.co/resource/{identificador}'\" +\r\n        \" o puedes pasar únicamente el identificador del recurso '{identificador}'.\"\r\n    });\r\n  };\r\n\r\n  onSubmit = async url => {\r\n    if (!url) return;\r\n\r\n    if (window.navigator.onLine) {\r\n      this.setState({ error: null, loading: true, metadata:null, data:null });\r\n      try {\r\n        url = url.toLowerCase();\r\n        let resource;\r\n        if (url.includes(\"datos.gov.co/resource/\")) {\r\n          const splitPath = url.split(\"datos.gov.co/resource/\");\r\n          if (splitPath.length == 2) {\r\n            if (splitPath[1]) {\r\n              resource = splitPath[1].replace(\".json\", \"\");\r\n            } else {\r\n              return this.errorDeFormato();\r\n            }\r\n          } else {\r\n            return this.errorDeFormato();\r\n          }\r\n        } else {\r\n          resource = url;\r\n        }\r\n\r\n        const resp = await fetch(\r\n          `http://datos.gov.co/api/views/metadata/v1/${resource}`\r\n        );\r\n        \r\n        if (resp.ok) {\r\n          const metadata = await resp.json();\r\n          this.setState({metadata});  \r\n          const allData = await loadAllData(resource);\r\n          this.setState({ data: allData, loading: false, error: null });\r\n        } else if (resp.status === 404) {\r\n          this.setState({\r\n            error: \"El recurso no existe, por favor revisa la url.\"\r\n          });\r\n        } else if (resp.status === 500) {\r\n          this.setState({\r\n            error: \"Hubo un error con el servidor, por favor intenta más tarde.\"\r\n          });\r\n        } else {\r\n          throw new Error();\r\n        }\r\n      } catch {\r\n        this.setState({\r\n          error: \"Hubo un error en la petición, por favor intenta más tarde.\"\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        error: \"No tienes conexión a internet, por favor intenta más tarde.\"\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state)\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col mt-3\">\r\n          <h2>Visualización datos.gov.co</h2>\r\n          <URLForm onSubmit={this.onSubmit} />\r\n          <MetaData {...this.state}/>\r\n          <NavioDiv {...this.state} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}